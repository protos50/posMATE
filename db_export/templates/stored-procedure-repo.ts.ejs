/*
 * This code was auto-generated by generator-mssql-types.
 * See https://github.com/jweyrich/generator-mssql-types for more information.
 * WARNING: If you change anything in this file it may be automatically overwriten!
 */

//import { Datasource, IProcedureResult, Procedure, SqlTypes } from '@internal/mssql-connector';
import { database } from '../../config/database';
import sql from 'mssql';

//export class <%= data.procedure.name %> {
   // readonly _repository: Datasource;

    //constructor(repository: Datasource) {
    //    this._repository = repository;
    //}

 export const execute = async(<% if (!data.procedure.parameters.isEmptyType) { %>params: Params<% } %>): Promise<sql.IProcedureResult<Result>> => {
       
    // const procedure = new Procedure<Result>('<%= data.procedure.name %>');
    var request = new sql.Request(database);
<%_ for (attr of data.procedure.parameters.attributes) { -%>
    <%_ if (attr.optional) { -%>
        if (params.<%= attr.name %> != null) {
            request.input('<%= attr.name %>', sql.<%= attr.type.sqlType %>, params.<%= attr.name %>);
            // procedure.addParameter('<%= attr.name %>', params.<%= attr.name %>, SqlTypes.<%= attr.type.sqlType %>);
        }
    <%_ } else { -%>
        request.input('<%= attr.name %>', sql.<%= attr.type.sqlType %>, params.<%= attr.name %>);
        //procedure.addParameter('<%= attr.name %>', params.<%= attr.name %>, SqlTypes.<%= attr.type.sqlType %>);
    <%_ } -%>
<%_ } -%>
    //request.output('output_parameter', sql.VarChar(50));
    const recordsets = await request.execute<Result>('<%= data.procedure.name %>');
    console.log("RecordSet <%= data.procedure.name %>",recordsets)
    return recordsets
    //return await this._repository.execProcedure(procedure);

    }
//}

<%_ if (data.procedure.parameters.isEmptyType) { -%>
<%_ } else if (data.procedure.parameters.isPlainType) { -%>
export type Params = <%= data.procedure.parameters.attributes[0].type.nativeType %>; /* <%= attr.type.commentSqlType %> */
<%_ } else { -%>
/*
 * All attributes below are optional because MSSQL does not give us the correct information.
 * We'd need to write a custom T-SQL parser to get this piece of information.
 */
export type Params = {
    <%_ for (attr of data.procedure.parameters.attributes) { -%>
    <%= attr.name %><%= attr.optional ? '?' : '' %>: <%= attr.type.nativeType %>; /* <%= attr.type.commentSqlType %> */
    <%_ } -%>
};
<%_ } -%>

<%_ if (data.procedure.result.errorMessage) { -%>
export type Result = {
    /* <%= data.procedure.result.errorMessage %> */
    _FailedToInspectTheResults: never; /* This helps making the `Result` type incompatible with others! */
};
<%_ } else if (data.procedure.result.isEmptyType) { -%>
export type Result = void;
<%_ } else if (data.procedure.result.isPlainType) { -%>
export type Result = <%= data.procedure.result.attributes[0].type.nativeType %>; /* <%= attr.type.commentSqlType %> */
<%_ } else { -%>
export type Result = {
<%_ for (attr of data.procedure.result.attributes) { -%>
    <%= attr.name %><%= attr.optional ? '?' : '' %>: <%= attr.type.nativeType %>; /* <%= attr.type.commentSqlType %> */
<%_ } -%>
} | null;
<%_ }  -%>