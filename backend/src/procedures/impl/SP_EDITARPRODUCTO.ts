/*
 * This code was auto-generated by generator-mssql-types.
 * See https://github.com/jweyrich/generator-mssql-types for more information.
 * WARNING: If you change anything in this file it may be automatically overwriten!
 */

//import { Datasource, IProcedureResult, Procedure, SqlTypes } from '@internal/mssql-connector';
import { database } from '../../config/database';
import sql from 'mssql';

//export class SP_EDITARPRODUCTO {
   // readonly _repository: Datasource;

    //constructor(repository: Datasource) {
    //    this._repository = repository;
    //}

 export const execute = async(params: Params): Promise<sql.IProcedureResult<Result>> => {
       
    // const procedure = new Procedure<Result>('SP_EDITARPRODUCTO');
    var request = new sql.Request(database);
        if (params.IdProducto != null) {
            request.input('IdProducto', sql.Int(), params.IdProducto);
            // procedure.addParameter('IdProducto', params.IdProducto, SqlTypes.Int());
        }
        if (params.IdCategoria != null) {
            request.input('IdCategoria', sql.Int(), params.IdCategoria);
            // procedure.addParameter('IdCategoria', params.IdCategoria, SqlTypes.Int());
        }
        if (params.Nombre != null) {
            request.input('Nombre', sql.NVarChar(100), params.Nombre);
            // procedure.addParameter('Nombre', params.Nombre, SqlTypes.NVarChar(100));
        }
        if (params.Descripcion != null) {
            request.input('Descripcion', sql.NVarChar(255), params.Descripcion);
            // procedure.addParameter('Descripcion', params.Descripcion, SqlTypes.NVarChar(255));
        }
        if (params.Stock != null) {
            request.input('Stock', sql.Int(), params.Stock);
            // procedure.addParameter('Stock', params.Stock, SqlTypes.Int());
        }
        if (params.PrecioCompra != null) {
            request.input('PrecioCompra', sql.Decimal(18, 2), params.PrecioCompra);
            // procedure.addParameter('PrecioCompra', params.PrecioCompra, SqlTypes.Decimal(18, 2));
        }
        if (params.PrecioVenta != null) {
            request.input('PrecioVenta', sql.Decimal(18, 2), params.PrecioVenta);
            // procedure.addParameter('PrecioVenta', params.PrecioVenta, SqlTypes.Decimal(18, 2));
        }
        if (params.Estado != null) {
            request.input('Estado', sql.Bit(), params.Estado);
            // procedure.addParameter('Estado', params.Estado, SqlTypes.Bit());
        }
        if (params.FechaRegistro != null) {
            request.input('FechaRegistro', sql.DateTime(), params.FechaRegistro);
            // procedure.addParameter('FechaRegistro', params.FechaRegistro, SqlTypes.DateTime());
        }
        if (params.codigoProducto != null) {
            request.input('codigoProducto', sql.NVarChar(50), params.codigoProducto);
            // procedure.addParameter('codigoProducto', params.codigoProducto, SqlTypes.NVarChar(50));
        }
    //request.output('output_parameter', sql.VarChar(50));
    const recordsets = await request.execute<Result>('SP_EDITARPRODUCTO');
    console.log("RecordSet SP_EDITARPRODUCTO",recordsets)
    return recordsets
    //return await this._repository.execProcedure(procedure);

    }
//}

/*
 * All attributes below are optional because MSSQL does not give us the correct information.
 * We'd need to write a custom T-SQL parser to get this piece of information.
 */
export type Params = {
    IdProducto?: number; /* int */
    IdCategoria?: number; /* int */
    Nombre?: string; /* nvarchar(100) */
    Descripcion?: string; /* nvarchar(255) */
    Stock?: number; /* int */
    PrecioCompra?: number; /* decimal(18, 2) */
    PrecioVenta?: number; /* decimal(18, 2) */
    Estado?: boolean; /* bit */
    FechaRegistro?: Date; /* datetime */
    codigoProducto?: string; /* nvarchar(50) */
};

export type Result = void;
